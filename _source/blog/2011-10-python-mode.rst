VIM плагин для комфортной работы с python
#########################################

:category: Blog
:date: 2011-10-10
:lang: ru
:slug: python-mode
:tags: vim, python

----

.. contents:: Содержание:

----

В своей работе я использую редактор VIM_. Я довольно долго шел к этому выбору,
перепробовав множество решений. Мне сразу не понравились большие IDE_, вроде 
Eclipse_ (и основанных на нем систем) или IDEA_. Во-первых это JAVA_ и медлительность,
хотя в последнее время ситуация улучшается. Во-вторых сложность самостоятельного
расширения функциональности. Меня почти устраивали Textmate_ (osx) и его аналог
E-texteditor_ (windows) с которыми я проработал продолжительное время, но так
случилось, что судьба свела меня с VIM_ :)

Не буду разводить холивар и расписывать все его достоинства, опишу лишь основные
преимущества сыгравшие для меня важнейшую роль.

- Легкая расширяемость. Расширения кроме несложного встроенного vimlang, можно
  писать практически на чем угодно: python, ruby, tcl, shell.

- Независимость от настроенной рабочей системы. Дайте мне терминал и я в пару команд
  получу на нем работающий VIM_ с моими настройками и плагинами. Именно поэтому
  VIM-еры работают на удаленных терминалах также комфортно как и на локальной
  машине.

- Мощность. При казалось бы простоте и аскетизме VIM_ очень гибко настраивается.
  Я еще не встречал функциональности в IDE_ которой бы не мог при желании
  получить в VIM_.

- **VIM-modes**. Да именно инопланетный режим работы VIM_ стал для меня наибольшим
  плюсом. У меня нет мышки, ни дома, ни на работе. Пальцы всегда на буквенном
  блоке клавиатуры. Это сложно объяснить, но когда к этому привыкаешь
  становится трудно работать по другому.

Ну, а самый большой минус VIM_ конечно же — кривая вхождения. С этим редактором
надо съесть пуд соли, но если вы подружитесь он оправдает все ожидания.


Python-mode screencast
======================

Для работы с python я написал отдельный плагин. Его главное достоинство в том,
что он не требует установки в систему используемых python библиотек (Pylint_,
Pyflakes_ и Rope_). Вот его основные возможности:

- Вывод python-документации в отдельном окне;
- Запуск текущего кода и вывод результата в отдельное окно;
- Проверка кода библиотекой Pylint_ или Pyflakes_ (автоматически или вручную);
- Умное автодополнение, переход к определениям объектов, рефакторинг и множество
  других фич библиотеки Rope_.
- Автоматическая поддержка Virtualenv_.
- И еще несколько полезных мелочей для python.

Чтобы продемонстрировать работу плагина я снял небольшой скринкаст (извиняюсь за
качество, это мой первый опыт). Итак **Python-mode**:

.. youtube:: 67OZNp9Z0CQ
    :align: center

Скачать плагин можно с Github: https://github.com/klen/python-mode

Также там можно посмотреть мою конфигурацию этого замечательного редактора:
https://github.com/klen/.vim

Если вы заинтересовались VIM_ и хотите узнать о нем побольше, советую посмотреть
к примеру эти скринкасты:

http://www.derekwyatt.org/vim/vim-tutorial-videos/vim-novice-tutorial-videos/



.. _VIM: http://www.vim.org
.. _IDE: http://ru.wikipedia.org/wiki/%D0%98%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%B0%D1%8F_%D1%81%D1%80%D0%B5%D0%B4%D0%B0_%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8
.. _Eclipse: http://ru.wikipedia.org/wiki/Eclipse_(%D1%81%D1%80%D0%B5%D0%B4%D0%B0_%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8)
.. _IDEA: http://www.jetbrains.com/idea/ 
.. _JAVA: http://www.java.org
.. _Textmate: http://macromates.com/
.. _E-texteditor: http://e-texteditor.com/
.. _Pylint: http://pypi.python.org/pypi/pylint
.. _Rope: http://rope.sourceforge.net/
.. _Pyflakes: http://pypi.python.org/pypi/pyflakes
.. _Virtualenv: http://pypi.python.org/pypi/virtualenv
