Graphite-beacon — простая система оповещений для Graphite
=========================================================

:category: Blog
:date: 2014-10-30
:lang: ru
:slug: graphite-beacon
:tags: python,graphite,tornado,monitoring

----

.. contents:: Содержание:

.. image:: /static/img/beacon/grafana.jpg

Для мониторинга своих проектов я использую связку из Graphite_ + Grafana_.
Данные с серверов собирает Collectd_, метрики приложений принимает Statsd_.

Недавно в очередной раз поднимая эту инфраструктуру, я понял, что мне не
хватает сигналов на основе данных метрик из Graphite_. Например
оповещения при падении свободной памяти ниже критического значения и тп.

Разумеется я не первый у кого возникла такая необходимость и существует ряд
OpenSource приложений для данной задачи. Вот некоторые их них: Seyren_, Cabot_,
graphite-pager_, graphite-alerts_. Вооружившись системой конфигурирования
серверов я уже начал писать роли для развертывания одного из перечисленных
решений, но через некоторое время осознал, что хочу сделать еще одно.

Итак, что же мне не понравилось?

Seyren_ — Java приложение (требует установленного MongoDB) при настройке
возникли проблемы (я уже не помню какого рода) и я вернулся к другим вариантам.

Поддерживает множество типов оповещений: SMTP, Hubit, IRC, HipChat и прочее.

graphite-pager_ — Python-приложение (требует установленного Redis). При
установке лично у меня возникли конфликты в python-зависимостях, в целом
решаемые. Главная для меня проблема: нет поддержки SMTP.

graphite-alerts_ — Форк graphite-pager_, как я понимаю добавлен веб-интерфейс
для настройки. Также требует Redis, плюс судя по зависимостям БД для
SQLAlchemy. Понятно, что можно использовать SQLLite, но тем не менее.
Установка описана очень поверхностно и желания разбираться не вызывает. Плюс
наследует от прародителя главный для меня недостаток: нет поддержки SMTP.

Cabot_ — Подозреваю самое мощное решение из перечисленных. Для установки
предлагается использовать поставляемый с исходниками fabfile, требования и
зависимости нигде не описаны. Судя по исходникам запускает Django +
Gunicorn для веб-интерфейса и Celery для переодических задач. Хочет
Postgres и Redis для базы данных и брокера соответственно.

Не понравился прежде всего мутной процедурой установки (в принципе все ясно), но
могли бы и прямо написать. Но это не главное, прежде всего я не хочу запускать
столько процессов чтобы иметь оповещения об изменении метрик из Graphite_.

Я хочу легко устанавливаемое и конфигурируемое приложение, потребляющее минимум
ресурсов, без дополнительных зависимостей и с поддержкой SMTP.

.. image:: https://raw.githubusercontent.com/klen/graphite-beacon/develop/beacon.png

Поэтому на свет появился Graphite-beacon_.

Это простое python-приложение не требуещее для работы базы данных или очереди
задач. Работает на основе Tornado_ и написано в асинхронном стиле. На текущий
момент для оповещений поддерживается SMTP и HipChat. При необходимости несложно
добавить новые.

Конфигурируется «маяк» при помощи JSON файлов и имеет интуитивно понятный
формат:

.. code-block:: javascript

    // Да здесь даже можно использовать комментарии
    {
    "graphite_url": "http://g.server.org",
    "smtp": {
        "from": "beacon@server.org",
        "to": ["me@gmail.com"]
    },
    "alerts": [
        {   "name": "MEM",
            "format": "bytes",
            "query": "aliasByNode(sumSeriesWithWildcards(collectd.*.memory.{memory-free,memory-cached}, 3), 1)",
            "rules": ["critical: < 200MB", "warning: < 400MB"] },
        {   "name": "CPU",
            "format": "percent",
            "interval": "30m",
            "query": "aliasByNode(sumSeriesWithWildcards(collectd.*.cpu-*.cpu-user, 2), 1)",
            "rules": ["critical: >= 80%", "warning: >= 70%"] }
    ]}

В данном примере «маяк» получает информацию по всем нодам, и высылает
предупреждения при низком количестве памяти или высокой загрузки процессора на
каком либо из подключенных серверов. Включая вложенные в письма графики из
Graphite_.

Подробнее смотрите в описании Graphite-beacon_.

Для Debian систем существует репозиторий с готовыми пакетами:
http://dl.bintray.com/klen/deb

Возможно для вас этот простой инструмент будет также полезен как и для меня.
Если у вас возникли вопросы, не стесняйтесь их задавать в комментариях.

Задачи на будущее:

* Анализ аномальных пиков на метриках;
* Прикручивание поддержки Hubot;
* Веб-интерфейс, но зачем?


.. _Cabot: https://github.com/arachnys/cabot
.. _Collectd: http://collectd.org
.. _Grafana: http://grafana.org
.. _Graphite: http://graphite.wikidot.com
.. _Seyren: https://github.com/scobal/seyren
.. _Statsd: https://github.com/etsy/statsd
.. _graphite-alerts: https://github.com/ybrs/graphite-alerts
.. _graphite-pager: https://github.com/seatgeek/graphite-pager
.. _Graphite-beacon: https://github.com/klen/graphite-beacon
.. _Tornado: http://www.tornadoweb.org/en/stable
